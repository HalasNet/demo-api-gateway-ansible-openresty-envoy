---


- name: Ensure group openresty created
  group: 
    name: openresty
    gid: "{{openresty.gid}}"
    state: present
  become: yes

- name: Ensure openresty home directory is present
  file: 
    path: "{{openresty.home}}"
    state: directory
  become: yes

- name: Ensure user openresty created
  user:
    name: openresty
    group: openresty
    home: "{{openresty.home}}"
    shell: /bin/bash
    uid: "{{openresty.uid}}"
    state: present
  become: yes

- name: Ensure openresty directories are present with the right ownership
  file:
    path: "{{item}}"
    owner: openresty
    group: openresty
    state: directory
  become: yes
  with_items:
    - "{{openresty.home}}"
    - "{{openresty.logs}}"
    - "{{openresty.conf.dir}}"
    - "{{openresty.conf.ssl.dir}}"
    - "{{openresty.conf.auth.dir}}"

- name: Ensure certs copied
  shell: cp /etc/ssl/localhost.* {{ openresty.conf.ssl.dir }}
  become: yes

- name: Ensure openresty configuration file copied
  template:
    src: default.conf.j2
    mode: u+rw
    owner: openresty
    group: openresty
    dest: "{{ openresty.conf.dir }}/default.conf"
  become: yes

# Add a users to a password file and ensure permissions are set
- name: Ensure user added to passeword file
  htpasswd:
    path: "{{openresty.conf.auth.dir}}/htpasswd"
    name: "{{ item.user }}"
    password: "{{ item.password }}"
    owner: openresty
    group: openresty
    mode: 0644
  become: yes
  with_items: "{{ users }}"
  no_log: true

- name: Get infos on container
  docker_container:
    name: "{{ openresty.container.id }}"
    state: started
  ignore_errors: yes
  register: result
  become: yes

- set_fact:
    container_exist: "{{ ('yes' if result.ansible_facts is defined else 'no') | bool }}"

- name: Does container exist?
  debug:
    var: container_exist

- name: Print the status of the container
  debug:
    msg: "The container status is {{ result.ansible_facts.docker_container['State']['Status'] }}"
  when: container_exist

- name: Ensure the older openresty service is removed
  docker_container:
    name: "{{ openresty.container.id }}"
    state: absent
  register: remove_openresty
  when: container_exist
  become: yes

- name: Ensure the openresty service is running
  docker_container:
    name: "{{ openresty.container.id }}"
    image: "{{ openresty.image }}:{{ openresty.version }}"
    state: started
    ports:
      - "{{ openresty.conf.port }}:{{ openresty.conf.port }}"
    volumes:
      - "{{ openresty.conf.dir}}:/etc/nginx/conf.d:ro"
      - "{{openresty.conf.auth.dir}}:/etc/nginx/conf.d/auth:ro"
      - "{{openresty.logs}}:/var/log/nginx:rw"
  become: yes